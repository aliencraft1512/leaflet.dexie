(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?factory(require('leaflet')):typeof define==='function'&&define.amd?define(['leaflet'],factory):(factory(global.L))}(this,(function(L){'use strict';L=L&&L.hasOwnProperty('default')?L['default']:L;var ControlSaveTiles=L.Control.extend({options:{position:'topleft',maxZoom:18,minimalZoom:8,zoomlevels:null,bounds:null,confirmSave:null,confirmRemoval:null},status:{storagesize:null,lengthToBeSaved:null,lengthSaved:null,lengthLoaded:null,_tilesforSave:null,mapSize:null,currMinZoom:null,tnames:[]},_db:new Dexie('leaflet-maps'),_dbversion:1,dtable:null,dterr:new Error('dtable not set'),initialize:function(baseLayer,options){this._baseLayer=baseLayer;L.setOptions(this,options)},openDB:async function(){var self=this;await this._db.open().then(function(){console.log("Found database: "+self._db.name+" version: "+self._db.verno);self._dbversion=self._db.verno;self._db.tables.forEach(function(table){self.status.tnames.push(table.name)});console.log(self._db.name+' tables: '+self.status.tnames.join(' '));self._baseLayer.fire('tblevent',self.status);return!0}).catch('NoSuchDatabaseError',function(e){console.log("Database not found, will be created with first table.");return!1}).catch(function(e){console.log("Oh uh: "+e);return!1})},setTable:function(tblName){this.dtable=this._db.table(tblName);this._baseLayer.dtable=this.dtable},deleteTable:function(tname){var self=this;this._extendSchema(tname).then(function(){console.log('dropped: '+tname);self._baseLayer.fire('tblevent',tname)}).catch(function(rej){console.log(rej)})},putItem:function(key,value){if(this.dtable==null)throw this.dterr;this.dtable.put(value,key)},getItem:function(key){if(this.dtable==null)throw this.dterr;return this.dtable.get(key)},deleteItem:function(key){if(this.dtable==null)throw this.dterr;return this.dtable.delete(key)},rmContent:function(){var self=this;var clearCallback=function(){self.deleteTable(self.dtable.name);self.dtable=null;self.status.storagesize=0;self._baseLayer.fire('storagesize',self.status)};if(this.options.confirmRemoval){this.options.confirmRemoval(this.status,clearCallback)}else{clearCallback()}},setLayer:function(layer){this._baseLayer=layer;this._baseLayer.dtable=this.dtable},setZoomlevels:function(zoomlevels){this.options.zoomlevels=zoomlevels},setBounds:function(bounds){this.options.bounds=bounds},onAdd:function(){var options=this.options;if(options.visualUI)
return options.visualUI;return L.DomUtil.create('div')},saveMap:function(){var zoomlevels=[];if(this.options.zoomlevels){zoomlevels=this.options.zoomlevels}else{var currentZoom=this._map.getZoom();if(currentZoom<this.options.minimalZoom){throw new Error('Not allowed to save with zoom level below '+this.options.minimalZoom)}
var maxZoom=this._map.options.maxZoom||this._baseLayer.options.maxZoom||this.options.maxZoom||currentZoom;for(var zoom=currentZoom;zoom<=maxZoom;zoom++){zoomlevels.push(zoom)}}
var latlngBounds=this.options.bounds||this._map.getBounds();var bounds;var tiles=[];for(var i=0;i<zoomlevels.length;i++){if(zoomlevels[i]<this.options.minimalZoom)continue;bounds=L.bounds(this._map.project(latlngBounds.getNorthWest(),zoomlevels[i]),this._map.project(latlngBounds.getSouthEast(),zoomlevels[i]));tiles=tiles.concat(this._baseLayer.getTileUrls(bounds,zoomlevels[i]))}
this._resetStatus(tiles);this.status.currMinZoom=zoomlevels[0];var self=this;var saveCallback=function(tblName){self._baseLayer.fire('savestart',self.status);var subdlength=self._baseLayer.getSimultaneous();for(var i=0;i<subdlength;i++){self._loadTile(tblName)}};if(this.options.confirmSave){this.options.confirmSave(this.status,saveCallback)}else{saveCallback()}},setStorageSize:function(callback){var self=this;if(this.dtable==null)throw this.dterr;this.dtable.count().then(function(numberOfKeys){self.status.storagesize=numberOfKeys;self._baseLayer.fire('storagesize',self.status);if(callback){callback(numberOfKeys)}},function(err){callback(0);throw err})},_resetStatus:function(tiles){this.status.lengthLoaded=0;this.status.lengthToBeSaved=tiles.length;this.status.lengthSaved=0;this.status._tilesforSave=tiles},_loadTile:async function(tblName){var self=this;var tileUrl=self.status._tilesforSave.shift();const blob=await fetch(tileUrl.url).then((res)=>{return(res.blob())}).catch(err=>console.log(err));if(!blob)return;if(self.status.lengthLoaded==0){if(self.status.tnames.indexOf(tblName)<0)
await self._extendSchema("+"+tblName).catch(err=>console.log(err));else await self._db.table(tblName).clear().catch(err=>console.log(err));self.dtable=self._db.table(tblName);self.status.mapSize=0}
self._saveTile(tileUrl.key,blob);self.status.mapSize+=blob.size;self.status.lengthLoaded++;if(self.status._tilesforSave.length>0){self._loadTile(tblName).catch(err=>console.log(err))}else{if(self.status.lengthLoaded===self.status.lengthToBeSaved){console.log("New table "+self.dtable.name);self._baseLayer.fire('loadend',self.status)}}},_saveTile:function(tileUrl,blob){var self=this;if(this.dtable==null)return;this.dtable.put(blob,tileUrl).then(()=>{self.status.lengthSaved++;self._baseLayer.fire('savetileend',self.status);if(self.status.lengthSaved===self.status.lengthToBeSaved){self._baseLayer.fire('tblevent',self.status);self.setStorageSize()}}).catch(err=>console.log(err))},_extendSchema:async function(tbl){this._db.close();var currSchema=this.status.tnames.reduce(function(obj,v){obj[v]='';return obj},{})
var extendedSchema;if(tbl.startsWith('+')){tbl=tbl.substring(1);extendedSchema={[tbl]:''};this.status.tnames.push(tbl)}else{extendedSchema={[tbl]:null};this.status.tnames.splice(this.status.tnames.indexOf(tbl),1)}
this._db.version(this._dbversion).stores(currSchema);this._dbversion++;this._db.version(Math.round(this._dbversion)).stores(extendedSchema);return await this._db.open()}});L.control.savetiles=function(baseLayer,options){return new ControlSaveTiles(baseLayer,options)};var TileLayerOffline=L.TileLayer.extend({options:{maxZoom:17,offUrl:null},dtable:null,offtest:!1,createTile:function(coords,done){var tile=L.TileLayer.prototype.createTile.call(this,coords,done);var url=tile.src;tile.src='';var self=this;this._setDataUrl(tile,url).then(function(dataurl){tile.src=dataurl}).catch(function(){if(self.offtest)url=self.options.offUrl;tile.src=url});return tile},_setDataUrl:function(tile,url){var self=this;return new Promise(function(resolve,reject){if(self.dtable==null){reject()}
else{self.dtable.get(self._getStorageKey(url)).then(function(data){if(data&&typeof data==='object'){resolve(URL.createObjectURL(data))}else{reject()}}).catch((e)=>{reject(e)})}})},_getStorageKey:function(url){var key;var subdomainpos=this._url.indexOf('{s}');if(subdomainpos>0){key=url.substring(0,subdomainpos)+this.options.subdomains[0]+url.substring(subdomainpos+1,url.length)}
return key||url},getSimultaneous:function(){return this.options.subdomains.length},getTileUrls:function(bounds,zoom){var self=this;var tiles=[];var origurl=this._url;this.setUrl(this._url.replace('{z}',zoom),!0);var tileBounds=L.bounds(bounds.min.divideBy(this.getTileSize().x).floor(),bounds.max.divideBy(this.getTileSize().x).floor());var url;for(var j=tileBounds.min.y;j<=tileBounds.max.y;j++){for(var i=tileBounds.min.x;i<=tileBounds.max.x;i++){var tilePoint=new L.Point(i,j);url=L.TileLayer.prototype.getTileUrl.call(self,tilePoint);tiles.push({key:self._getStorageKey(url),url:url})}}
this.setUrl(origurl,!0);return tiles},});L.tileLayer.offline=function(url,options){return new TileLayerOffline(url,options)}})))